{"version":3,"sources":["webpack:///./app/components/Login/styledComponents.js","webpack:///./app/components/common/Error/Error.jsx","webpack:///./app/components/common/Redirect/Redirect.jsx","webpack:///./app/components/Login/Login.jsx","webpack:///./app/components/Login/constant.js","webpack:///./app/containers/Login/Login.jsx"],"names":["FormConatiner","styled","div","Form","form","InputConatiner","props","columnDirection","Input","input","SubmitBtn","CheckBox","ErrorComp","Error","errorMsg","propTypes","PropTypes","string","defaultProps","RedirectTo","to","isRequired","Login","submitHandler","isLoggedIn","isError","useState","email","setEmail","password","setPassword","keepMeSignIn","setKeepMeSignIn","Redirect","Method","onSubmit","className","htmlFor","id","type","value","onChange","e","target","handleEmailChange","handlePasswordChange","checked","handleCheckBox","onClick","preventDefault","handleSubmit","func","bool","connect","state","get","isLogin","error","dispatch","login","LoginComponent"],"mappings":"krCAEO,IAAMA,EAAgBC,IAAOC,IAAV,KAWbC,EAAOF,IAAOG,KAAV,KAYJC,EAAiBJ,IAAOC,IAAV,KAIL,SAACI,GAAD,OAAYA,EAAMC,gBAAkBD,EAAMC,gBAAkB,YAC3D,SAACD,GAAD,OAAYA,EAAMC,gBAAkB,gBAAkB,aAIhEC,EAAQP,IAAOQ,MAAV,KAILC,EAAYT,YAAOO,EAAPP,CAAH,KAOTU,EAAWV,YAAOO,EAAPP,CAAH,K,yLCzCrB,IAAMW,EAAYX,IAAOC,IAAV,KAGTW,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,kBAACF,EAAD,KAAYE,IAGdD,EAAME,UAAY,CAChBD,SAAUE,IAAUC,QAGtBJ,EAAMK,aAAe,CACnBJ,SAAU,+CAGGD,Q,QCfTM,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,OACjB,kBAAC,IAAD,CAAUA,GAAIA,KAEhBD,EAAWJ,UAAY,CACrBK,GAAIJ,IAAUC,OAAOI,YAERF,Q,sfCER,IAAMG,EAAQ,SAAC,GAA2C,IAAzCC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAAc,IACrCC,mBAAS,IAD4B,GACxDC,EADwD,KACjDC,EADiD,SAE/BF,mBAAS,IAFsB,GAExDG,EAFwD,KAE9CC,EAF8C,SAGvBJ,oBAAS,GAHc,GAGxDK,EAHwD,KAG1CC,EAH0C,KAiB/D,OACE,oCACGR,GAAc,kBAACS,EAAD,CAAmBb,GC3BV,kBD4BxB,kBAACjB,EAAD,CAAM+B,OAAO,OAAOC,SAAUZ,GAC5B,kBAACvB,EAAD,KACGyB,GAAW,kBAAC,EAAD,CAAgBX,SClCb,8BDmCf,kBAACT,EAAD,CAAgB+B,UAAU,OACxB,2BAAOC,QAAQ,QAAQD,UAAU,OAC9B,ICnCY,aDsCf,kBAAC5B,EAAD,CAAO8B,GAAG,QAAQC,KAAK,QAAQC,MAAOb,EAAOc,SAAU,SAACC,IAxBxC,SAACA,GACzBd,EAASc,EAAEC,OAAOH,OAuBsDI,CAAkBF,OAEpF,kBAACrC,EAAD,CAAgB+B,UAAU,OACxB,2BAAOC,QAAQ,WAAWD,UAAU,OCxClB,aDyClB,kBAAC5B,EAAD,CAAO8B,GAAG,WAAWC,KAAK,WAAWC,MAAOX,EAAUY,SAAU,SAACC,IAzB9C,SAACA,GAC5BZ,EAAYY,EAAEC,OAAOH,OAwB4DK,CAAqBH,OAEhG,kBAACrC,EAAD,CAAgBE,gBAAgB,OAC9B,yBAAK6B,UAAU,OACb,kBAACzB,EAAD,CAAU4B,KAAK,WAAWE,SAAU,SAACC,IA1B1B,SAACA,GACtBV,EAAgBU,EAAEC,OAAOG,SAyB8BC,CAAeL,MAC3D,IACD,8BCjDiB,sBDmDnB,kBAAChC,EAAD,CAAW6B,KAAK,SAASC,MAAM,QAAQQ,QAAS,SAACN,IA3BtC,SAACA,GACpBA,EAAEO,iBACF1B,EAAcI,EAAOE,EAAUE,GAyBkCmB,CAAaR,WAQlFpB,EAAMP,UAAY,CAChBQ,cAAeP,IAAUmC,KAAK9B,WAC9BG,WAAYR,IAAUoC,KAAK/B,WAC3BI,QAAST,IAAUoC,KAAK/B,YAGXC,Q,QEpDA+B,uBAVS,SAACC,GAAD,MAAY,CAClC9B,WAAY8B,EAAMC,IAAI,SAASC,QAC/B/B,QAAS6B,EAAMC,IAAI,SAASE,UAGJ,SAACC,GAAD,MAAe,CAEvCnC,cAAe,SAACI,EAAOE,EAAUE,GAAlB,OAAmC2B,EAASC,YAAM,CAAEhC,QAAOE,WAAUE,sBAGvEsB,CAA4CO","file":"3.index_bundle.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormConatiner = styled.div`\nborder: 1px solid #887e7e;\npadding: 2rem;\nbackground-color: #fff;\nmargin: 0 20px;\nwidth:450px;\n@media (max-width: 767px) {\n    width:auto;\n  }\n`;\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nvertical-align: middle;\njustify-content: center;\nheight: 100%;\n@media (max-width: 767px) {\n    height: 60%\n  }\n`;\n\nexport const InputConatiner = styled.div`\ndisplay: flex;\nflex-direction: column;\n@media (min-width: 768px) {\n    flex-direction: ${(props) => (props.columnDirection ? props.columnDirection : 'column')}\n    justify-content: ${(props) => (props.columnDirection ? 'space-between' : 'initial')}\n  }\n`;\n\nexport const Input = styled.input`\nheight: 30px;\n`;\n\nexport const SubmitBtn = styled(Input)`\nborder-radius: 25px;\npadding: 5px 20px;\nbackground-color: #74cedc;\ncolor: white;\n`;\n\nexport const CheckBox = styled(Input)`\nheight: auto;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ErrorComp = styled.div`\ncolor: red;\n`;\nconst Error = ({ errorMsg }) => (\n  <ErrorComp>{errorMsg}</ErrorComp>\n);\n\nError.propTypes = {\n  errorMsg: PropTypes.string,\n};\n\nError.defaultProps = {\n  errorMsg: 'There is some error please check the values',\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst RedirectTo = ({ to }) => (\n  <Redirect to={to} />\n);\nRedirectTo.propTypes = {\n  to: PropTypes.string.isRequired,\n};\nexport default RedirectTo;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form, FormConatiner, InputConatiner, Input, CheckBox, SubmitBtn,\n} from './styledComponents';\nimport ErrorComponent from '../common/Error/Error';\nimport RedirectComponent from '../common/Redirect/Redirect';\nimport {\n  ERROR_MSG, CHECK_BOX_LABEL, EMAIL_LABEL, PASSWORD_LABEL, REDIRECT_ROUTE,\n} from './constant';\n\n\nexport const Login = ({ submitHandler, isLoggedIn, isError }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [keepMeSignIn, setKeepMeSignIn] = useState(false);\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n  const handleCheckBox = (e) => {\n    setKeepMeSignIn(e.target.checked);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitHandler(email, password, keepMeSignIn);\n  };\n  return (\n    <>\n      {isLoggedIn && <RedirectComponent to={REDIRECT_ROUTE} />}\n      <Form Method=\"POST\" onSubmit={submitHandler}>\n        <FormConatiner>\n          {isError && <ErrorComponent errorMsg={ERROR_MSG} />}\n          <InputConatiner className=\"mb1\">\n            <label htmlFor=\"email\" className=\"mb1\">\n              {' '}\n              {EMAIL_LABEL}\n            </label>\n            <Input id=\"email\" type=\"email\" value={email} onChange={(e) => { handleEmailChange(e); }} />\n          </InputConatiner>\n          <InputConatiner className=\"mb1\">\n            <label htmlFor=\"password\" className=\"mb1\">{PASSWORD_LABEL}</label>\n            <Input id=\"password\" type=\"password\" value={password} onChange={(e) => { handlePasswordChange(e); }} />\n          </InputConatiner>\n          <InputConatiner columnDirection=\"row\">\n            <div className=\"mb1\">\n              <CheckBox type=\"checkbox\" onChange={(e) => { handleCheckBox(e); }} />\n              {' '}\n              <span>{CHECK_BOX_LABEL}</span>\n            </div>\n            <SubmitBtn type=\"button\" value=\"Login\" onClick={(e) => { handleSubmit(e); }} />\n          </InputConatiner>\n        </FormConatiner>\n      </Form>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired,\n};\n\nexport default Login;\n","export const ERROR_MSG = 'Invalid Email Or Password';\nexport const CHECK_BOX_LABEL = 'keep me logged in';\nexport const EMAIL_LABEL = 'UserName:';\nexport const PASSWORD_LABEL = 'Password:';\nexport const REDIRECT_ROUTE = '/users?page=1';\n","import { connect } from 'react-redux';\nimport LoginComponent from '../../components/Login/Login';\nimport { login } from './actions';\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.get('login').isLogin,\n  isError: state.get('login').error,\n});\n\nconst mapDispathToProps = (dispatch) => ({\n  // eslint-disable-next-line max-len\n  submitHandler: (email, password, keepMeSignIn) => dispatch(login({ email, password, keepMeSignIn })),\n});\n\nexport default connect(mapStateToProps, mapDispathToProps)(LoginComponent);\n"],"sourceRoot":""}