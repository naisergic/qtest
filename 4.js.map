{"version":3,"sources":["webpack:///./app/components/UserDetail/styledComponents.js","webpack:///./app/components/UserDetail/UserDetail.jsx","webpack:///./app/containers/UserDetail/UserDetail.jsx"],"names":["Image","styled","img","DivContainer","div","DivWithBg","PersonalDiv","UserDetail","first_name","last_name","detail","detail2","phoneNumber","email","avatar","className","alt","src","propTypes","PropTypes","string","isRequired","defaultProps","props","useState","userData","setuserData","location","data","pathname","id","slice","lastIndexOf","useEffect","getUserDetail","userId","object","func","withRouter","connect","state","get","dispatch","fetchUserDetail"],"mappings":"41BAEO,IAAMA,EAAQC,IAAOC,IAAV,KAKLC,EAAeF,IAAOG,IAAV,KAUZC,EAAYJ,IAAOG,IAAV,KAKTE,EAAcL,IAAOG,IAAV,KCfXG,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,WAAYC,EADY,EACZA,UAAWC,EADC,EACDA,OAAQC,EADP,EACOA,QAASC,EADhB,EACgBA,YAAaC,EAD7B,EAC6BA,MAAOC,EADpC,EACoCA,OADpC,OAGxB,kBAACX,EAAD,KACE,kBAACE,EAAD,KACE,kBAACL,EAAD,CAAOe,UAAU,MAAMC,IAAI,OAAOC,IAAKH,IACvC,yBAAKC,UAAU,OAAf,cAA6BP,EAA7B,YAA2CC,IAC3C,6BAAMC,GACN,yBAAKK,UAAU,OAAOJ,GACtB,kBAACL,EAAD,KACE,6BAAMM,GACN,6BAAMC,OAMdN,EAAWW,UAAY,CACrBV,WAAYW,IAAUC,OAAOC,WAC7BZ,UAAWU,IAAUC,OAAOC,WAC5BX,OAAQS,IAAUC,OAClBT,QAASQ,IAAUC,OACnBR,YAAaO,IAAUC,OACvBP,MAAOM,IAAUC,OAAOC,WACxBP,OAAQK,IAAUC,OAAOC,YAG3Bd,EAAWe,aAAe,CACxBZ,OAAQ,0CACRC,QAAS,uBACTC,YAAa,gBAGAL,Q,wvBCjCR,IAAMA,EAAa,SAACgB,GAAU,QACHC,mBAAS,IADN,GAC5BC,EAD4B,KAClBC,EADkB,KAE3BC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KACVC,EAAaF,EAAbE,SACFC,EAAKD,EAASE,MAAMF,EAASG,YAAY,KAAO,GAUtD,OATAC,qBAAU,WACJL,IAASA,EAAKE,IAChBP,EAAMW,cAAcJ,KAErB,CAACH,IACJM,qBAAU,WACRP,EAAYE,KACX,CAACA,IAEI,kBAAC,EAAD,KAAyBH,EAASK,GAAlC,CAAuCK,OAAQL,MAYzDvB,EAAWW,UAAY,CACrBS,SAAUR,IAAUiB,OAAOf,WAC3BO,KAAMT,IAAUiB,OAAOf,WACvBa,cAAef,IAAUkB,KAAKhB,YAGjBiB,sBAAWC,aAfF,SAACC,GAAD,MAAY,CAClCZ,KAAMY,EAAMC,IAAI,cAAcb,SAGN,SAACc,GAAD,MAAe,CACvCR,cAAe,SAACJ,GAAD,OAAQY,EAASC,YAAgBb,QAUxBS,CAA4ChC","file":"4.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Image = styled.img`\nheight: 100px;\nwidth: 100px;\nborder-radius: 50px;\n`;\nexport const DivContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nheight: 100%;\n@media (max-width: 767px) {\n    height: 60%\n  }\n`;\nexport const DivWithBg = styled.div`\nbackground-color: #d7eceb;\npadding: 50px;\ntext-align: center;\n`;\nexport const PersonalDiv = styled.div`\nflex-direction: row;\ndisplay: flex;\njustify-content: space-between;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DivContainer, DivWithBg, Image, PersonalDiv,\n} from './styledComponents';\n\n\nexport const UserDetail = ({\n  first_name, last_name, detail, detail2, phoneNumber, email, avatar,\n}) => (\n  <DivContainer>\n    <DivWithBg>\n      <Image className=\"mb1\" alt=\"user\" src={avatar} />\n      <div className=\"mb1\">{`Mr. ${first_name} ${last_name}`}</div>\n      <div>{detail}</div>\n      <div className=\"mb1\">{detail2}</div>\n      <PersonalDiv>\n        <div>{phoneNumber}</div>\n        <div>{email}</div>\n      </PersonalDiv>\n    </DivWithBg>\n  </DivContainer>\n);\n\nUserDetail.propTypes = {\n  first_name: PropTypes.string.isRequired,\n  last_name: PropTypes.string.isRequired,\n  detail: PropTypes.string,\n  detail2: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  email: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n};\n\nUserDetail.defaultProps = {\n  detail: 'Co-founder & CEO at Bravo Incorporation',\n  detail2: '(It enabled service)',\n  phoneNumber: '+17899048786',\n};\n\nexport default UserDetail;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport UserDetailComponent from '../../components/UserDetail/UserDetail';\nimport { fetchUserDetail } from './actions';\n\nexport const UserDetail = (props) => {\n  const [userData, setuserData] = useState({});\n  const { location, data } = props;\n  const { pathname } = location;\n  const id = pathname.slice(pathname.lastIndexOf('/') + 1);\n  useEffect(() => {\n    if (data && !data[id]) {\n      props.getUserDetail(id);\n    }\n  }, [location]);\n  useEffect(() => {\n    setuserData(data);\n  }, [data]);\n  \n  return (<UserDetailComponent {...userData[id]} userId={id} />);\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.get('userDetail').data,\n});\n\nconst mapDispathToProps = (dispatch) => ({\n  getUserDetail: (id) => dispatch(fetchUserDetail(id)),\n});\n\n\nUserDetail.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n  getUserDetail: PropTypes.func.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispathToProps)(UserDetail));\n"],"sourceRoot":""}